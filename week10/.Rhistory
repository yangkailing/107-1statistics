#setwd("")
load("UCBAdmissions.Rdata")
# Q1: One population proportion --------------------------------------------------------------------
alpha=0.005
z_half_alpha = qnorm(alpha, lower.tail = F)
x = xtabs(Freq ~ Admit, data = A)
x
Suc = x[1]
Rej = x[2]
p_hat = Suc / sum(x)
z_score = (p_hat-0.4) / sqrt(0.4*0.6/sum(x))
z_score
#From z-score
if (abs(z_score) >= abs(z_half_alpha)) {
CHECK = "Reject NULL"
} else {
CHECK = "Can NOT reject NULL"
}
#From p-value and alpha
p.value = pnorm(abs(z_score),lower.tail = F)*2
p.value
if(p.value<=alpha){
CHECK2 = "Reject NULL"
}else {
CHECK2 = "Can NOT reject NULL"
}
print(CHECK)
print(CHECK2)
z_half_alpha = qnorm(0.005, lower.tail = F)
x2 = xtabs(Freq ~ Gender + Admit, data = A)
x2
A<-load("UCBAdmissions.Rdata")
load("UCBAdmissions.Rdata")
View(A)
A[Dept==A]
head(A)
head(A)
# Q1: One population proportion --------------------------------------------------------------------
head(A)
A[Dept=="A"]
A[Dept=="A"]
A[,Dept=="A"]
#setwd("")
A1<-load("UCBAdmissions.Rdata")
#setwd("")
load("UCBAdmissions.Rdata")
names(A)
A[,"Dept"=="A"]
B<-A[,"Dept"=="A"]
View(B)
B<-A["Dept"=="A",]
View(B)
B<-A["Dept"=="B",]
B<-A["Dept"==B,]
B<-A[1:4,]
View(B)
B<-A["Dept"=="B", ]
str(A)
B<-A["Dept"== "B", ]
B<-A[Dept== "B", ]
Dept
str(A)
B<-A[A$Dept== "B", ]
load("UCBAdmissions.Rdata")
z_half_alpha = qnorm(0.005, lower.tail = F)
Z_scores=c()
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x2
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
}
load("UCBAdmissions.Rdata")
z_half_alpha = qnorm(0.005, lower.tail = F)
Z_scores=c()
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x2
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
}
Z_scores
if (abs(Z_score) >= abs(z_half_alpha)) {
CHECK = "Reject NULL"
} else {
CHECK = "Can NOT reject NULL"
}
#From z-score
if (abs(Z_scores) >= abs(z_half_alpha)) {
CHECK = "Reject NULL"
} else {
CHECK = "Can NOT reject NULL"
}
load("UCBAdmissions.Rdata")
z_half_alpha = qnorm(0.005, lower.tail = F)
Z_scores=c()
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x2
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
}
Z_scores
for(i in department){
#From z-score
if (abs(Z_scores[i]) >= abs(z_half_alpha)) {
CHECK = "Reject NULL"
} else {
CHECK = "Can NOT reject NULL"
}
#From p-value and alpha
p.value = pnorm(abs(Z_scores[i]),lower.tail = F)*2
p.value
if(p.value<=alpha){
CHECK2 = "Reject NULL"
}else {
CHECK2 = "Can NOT reject NULL"
}
print(CHECK)
print(CHECK2)
}
load("UCBAdmissions.Rdata")
alpha=0.01
z_half_alpha = qnorm(0.005, lower.tail = F)
Z_scores=c()
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x2
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
}
Z_scores
for(i in department){
#From z-score
if (abs(Z_scores[i]) >= abs(z_half_alpha)) {
CHECK = "Reject NULL"
} else {
CHECK = "Can NOT reject NULL"
}
#From p-value and alpha
p.value = pnorm(abs(Z_scores[i]),lower.tail = F)*2
p.value
if(p.value<=alpha){
CHECK2 = "Reject NULL"
}else {
CHECK2 = "Can NOT reject NULL"
}
print(CHECK)
print(CHECK2)
}
load("UCBAdmissions.Rdata")
alpha=0.01
z_half_alpha = qnorm(0.005, lower.tail = F)
Z_scores=c()
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x2
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
}
Z_scores
for(i in department){
#From z-score
if (abs(Z_scores[i]) >= abs(z_half_alpha)) {
CHECK[i] = "Reject NULL"
} else {
CHECK[i] = "Can NOT reject NULL"
}
#From p-value and alpha
p.value = pnorm(abs(Z_scores[i]),lower.tail = F)*2
p.value
if(p.value<=alpha){
CHECK2[i] = "Reject NULL"
}else {
CHECK2[i] = "Can NOT reject NULL"
}
}
print(CHECK)
print(CHECK2)
outcome=list(z-score=Z_scores,check_from_z-score=CHECK,check_from_p-value=CHECK2)
outcome<-list(z-score=Z_scores,check_from_z-score=CHECK,check_from_p-value=CHECK2)
load("UCBAdmissions.Rdata")
alpha=0.01
z_half_alpha = qnorm(0.005, lower.tail = F)
Z_scores=c()
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x2
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
}
Z_scores
for(i in department){
#From z-score
if (abs(Z_scores[i]) >= abs(z_half_alpha)) {
CHECK_z[i] = "Reject NULL"
} else {
CHECK_z[i] = "Can NOT reject NULL"
}
#From p-value and alpha
p.value = pnorm(abs(Z_scores[i]),lower.tail = F)*2
if(p.value<=alpha){
CHECK_p[i] = "Reject NULL"
}else {
CHECK_p[i] = "Can NOT reject NULL"
}
}
load("UCBAdmissions.Rdata")
#建立需要用到的vector
Z_scores=c()
CHECK_z=c()
CHECK_p=c()
#計算alpha的z-score
alpha=0.01
z_half_alpha = qnorm(0.005, lower.tail = F)
#分department 做hypothesis test
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
}
Z_scores
for(i in department){
#From z-score
if (abs(Z_scores[i]) >= abs(z_half_alpha)) {
CHECK_z[i] = "Reject NULL"
} else {
CHECK_z[i] = "Can NOT reject NULL"
}
#From p-value and alpha
p.value = pnorm(abs(Z_scores[i]),lower.tail = F)*2
if(p.value<=alpha){
CHECK_p[i] = "Reject NULL"
}else {
CHECK_p[i] = "Can NOT reject NULL"
}
}
print(CHECK_z)
print(CHECK_p)
outcome<-list(z-score=Z_scores,CHECK_z, CHECK,CHECK_p)
load("UCBAdmissions.Rdata")
#建立需要用到的vector
Z_scores=c()
CHECK_z=c()
CHECK_p=c()
#計算alpha的z-score
alpha=0.01
z_half_alpha = qnorm(0.005, lower.tail = F)
#分department 做hypothesis test
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
}
Z_scores
for(i in department){
#From z-score
if (abs(Z_scores[i]) >= abs(z_half_alpha)) {
CHECK_z[i] = "Reject NULL"
} else {
CHECK_z[i] = "Can NOT reject NULL"
}
#From p-value and alpha
p.value = pnorm(abs(Z_scores[i]),lower.tail = F)*2
if(p.value<=alpha){
CHECK_p[i] = "Reject NULL"
}else {
CHECK_p[i] = "Can NOT reject NULL"
}
}
print(CHECK_z)
print(CHECK_p)
outcome<-list(Z_scores,CHECK_z, CHECK,CHECK_p)
outcome
outcome<-list("zscores"=Z_scores,CHECK_z, CHECK,CHECK_p)
outcome
outcome<-list("zscores"=Z_scores,"CHECK from z-score"=CHECK_z, "CHECK from p-value"=CHECK_p)
outcome
load("UCBAdmissions.Rdata")
#建立需要用到的vector
Z_scores=c()
CHECK_z=c()
CHECK_p=c()
#計算alpha的z-score
alpha=0.01
z_half_alpha = qnorm(0.005, lower.tail = F)
#分department 做hypothesis test
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
#From z-score
if (abs(Z_scores[i]) >= abs(z_half_alpha)) {
CHECK_z[i] = "Reject NULL"
} else {
CHECK_z[i] = "Can NOT reject NULL"
}
#From p-value and alpha
p.value = pnorm(abs(Z_scores[i]),lower.tail = F)*2
if(p.value<=alpha){
CHECK_p[i] = "Reject NULL"
}else {
CHECK_p[i] = "Can NOT reject NULL"
}
}
outcome<-list("zscores"=Z_scores,"CHECK from z-score"=CHECK_z, "CHECK from p-value"=CHECK_p)
outcome
load("UCBAdmissions.Rdata")
#建立需要用到的vector
Z_scores=c()
CHECK_z=c()
CHECK_p=c()
#計算alpha的z-score
alpha=0.01
z_half_alpha = qnorm(0.005, lower.tail = F)
#分department 做hypothesis test
department=c("A","B","C","D","E","F")
for (i in department){
B<-A[A$Dept== i, ]
x2 = xtabs(Freq ~ Gender + Admit, data = B)
x_Male = x2[1,1]
x_Female = x2[2,1]
Total_Male = sum(x2[1,])
Total_Female = sum(x2[2,])
Male_Rate = x_Male / Total_Male
Female_Rate = x_Female / Total_Female
#common population proportion
Total_Rate = (x2[1,1]+x2[2,1]) / sum(x2)
se2 = sqrt(Total_Rate * (1-Total_Rate) * (1/Total_Male+1/Total_Female))
z2_score = ((Male_Rate - Female_Rate) - 0) / se2
Z_scores[i]=z2_score
#From z-score
if (abs(Z_scores[i]) >= abs(z_half_alpha)) {
CHECK_z[i] = "Reject NULL"
} else {
CHECK_z[i] = "Can NOT reject NULL"
}
#From p-value and alpha
p.value = pnorm(abs(Z_scores[i]),lower.tail = F)*2
if(p.value<=alpha){
CHECK_p[i] = "Reject NULL"
}else {
CHECK_p[i] = "Can NOT reject NULL"
}
}
outcome<-list("zscores"=Z_scores,"CHECK from z-score"=CHECK_z, "CHECK from p-value"=CHECK_p)
outcome
prop.test(x = c(0.51*493, 0.38*538), n = c(493,538),
alternative = "greater",
conf.level = 0.95, correct = F)
phat=(0.51*493+0.38*538)/(493+538)
z=(0.51-0.38-0)/sqrt(phat*(1-phat)*(1/493+1/538))
pnorm(z,lower.tail = F)
z=(0.51-0.38-0)/sqrt(phat*(1-phat)*(1/493+1/538))
z

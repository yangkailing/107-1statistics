right_p=c(87/129,64/83,151/212)
over_p=c(39/129,3/83,42/212)
under_p=c(3/129,16/83,19/212)
data.frame(right_p,over_p,under_p)
right_p=c(87/129,64/83,151/212)
over_p=c(39/129,3/83,42/212)
under_p=c(3/129,16/83,19/212)
data.frame(right_p,over_p,under_p,row.names = c("female","male","total"))
right_p=c(87/129,64/83,151/212)
over_p=c(39/129,3/83,42/212)
under_p=c(3/129,16/83,19/212)
data.frame(about_right=right_p,over_p,under_p,row.names = c("female","male","total"))
right_p=c(87/129,64/83,151/212)
over_p=c(39/129,3/83,42/212)
under_p=c(3/129,16/83,19/212)
data.frame(about_right=right_p,overweight=over_p,underweight=under_p,row.names = c("female","male","total"))
right_p=c(87/129,64/83,151/212)
over_p=c(39/129,3/83,42/212)
under_p=c(3/129,16/83,19/212)
total_p=c(1,1,1)
data.frame(about_right=right_p,overweight=over_p,underweight=under_p,total_p,row.names = c("female","male","total"))
right_p=c(87/129,64/83,151/212)
over_p=c(39/129,3/83,42/212)
under_p=c(3/129,16/83,19/212)
total_p=c(1,1,1)
data.frame(about_right=right_p,overweight=over_p,underweight=under_p,total=total_p,row.names = c("female","male","total"))
right_p=c(87/129,64/83,151/212)
over_p=c(39/129,3/83,42/212)
under_p=c(3/129,16/83,19/212)
total_p=c(1,1,1)
p=data.frame(about_right=right_p,overweight=over_p,underweight=under_p,total=total_p,row.names = c("female","male","total"))
right_p=c(87/129,64/83,151/212)
over_p=c(39/129,3/83,42/212)
under_p=c(3/129,16/83,19/212)
total_p=c(1,1,1)
p=data.frame(about_right=right_p,overweight=over_p,underweight=under_p,total=total_p,row.names = c("female","male","total"))
p
pp=t(as.matrix(p))
pp
pp=t(as.matrix(p))
pp=pp[1:3,1:2]
barplot(pp,col=c("red","blue","green"),main="comparison of gender")
pp=t(as.matrix(p))
pp=pp[1:3,1:2]
pp
pp=t(as.matrix(p))
pp=pp[1:3,1:2]
barplot(pp,col=c("red","blue","green"),main="comparison of gender",xlab = "gender",ylab="percentage",legend=rownames(pp),beside = T)
survive=c(5,100,105)
die=c(95,900,995)
TOTAL=c(100,1000,1100)
data.frame(survive,die,TOTAL,row.names = c('standard','new','total'))
survive=c(5,100,105)
die=c(95,900,995)
TOTAL=c(100,1000,1100)
a=data.frame(survive,die,TOTAL,row.names = c('standard','new','total'))
a
survive=c(500,95,595)
die=c(500,5,505)
TOTAL=c(1000,100,1100)
b=data.frame(survive,die,TOTAL,row.names = c('standard','new','total'))
b
a[1,1]/a[1,3]
a[1,1]
a[1,1]/a[1,3]
a[2,1]/a[2,3]
b[1,1]/b[1,3]
b[2,1]/b[2,3]
c=a+b
c
c=a+b
c
c[1,1]/c[1,3]
c[2,1]/c[2,3]
separated=c(41,41,32,114)
not=c(931,290,163,1384)
TOTAL=c(972,331,195,1498)
a=data.frame(separated,not,TOTAL,row.names = c('neither smoked','one smoked','both smoked'))
separated=c(41,41,32,114)
not=c(931,290,163,1384)
TOTAL=c(972,331,195,1498)
a=data.frame(separated,not,TOTAL,row.names = c('neither smoked','one smoked','both smoked','total'))
a
exp_separated=c(972*114/1498,331*114/1498,195*114/1498)
exp_not=c(972*1384/1498,331*1384/1498,195*1384/1498)
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2]
exp_separated=c(972*114/1498,331*114/1498,195*114/1498)
exp_not=c(972*1384/1498,331*1384/1498,195*1384/1498)
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2]
a
exp_separated=c(972*114/1498,331*114/1498,195*114/1498)
exp_not=c(972*1384/1498,331*1384/1498,195*1384/1498)
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2];a
chi=(a-exp)/exp
chi-square=sum(chi)
exp_separated=c(972*114/1498,331*114/1498,195*114/1498)
exp_not=c(972*1384/1498,331*1384/1498,195*1384/1498)
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2];a
chi=(a-exp)/exp
chi-square<-sum(chi)
exp_separated=c(972*114/1498,331*114/1498,195*114/1498)
exp_not=c(972*1384/1498,331*1384/1498,195*1384/1498)
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2];a
chi=(a-exp)/exp
sum(chi)
exp_separated=c(972*114/1498,331*114/1498,195*114/1498)
exp_not=c(972*1384/1498,331*1384/1498,195*1384/1498)
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2];a
chi=(a-exp)/exp
chi
sum(chi)
exp_separated=c(972*114/1498,331*114/1498,195*114/1498)
exp_not=c(972*1384/1498,331*1384/1498,195*1384/1498)
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2];a
chi=(a-exp)^2/exp
chi
sum(chi)
exp_separated=c(972*114/1498,331*114/1498,195*114/1498)
exp_not=c(972*1384/1498,331*1384/1498,195*1384/1498)
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2];a
chi=(a-exp)^2/exp;chi
chi=sum(chi)
exp_separated=c(972*114/1498,331*114/1498,195*114/1498)
exp_not=c(972*1384/1498,331*1384/1498,195*1384/1498)
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2];a
chi=(a-exp)^2/exp;chi
chi=sum(chi)
chi
df=(3-1)(2-1)
df=(3-1)*(2-1)
p.value=1-pchisq(chi,df=df)
p.value
always=c(964,924,1888)
never=c(97,254,351)
TOTAL=c(1061,1178,2239)
a=data.frame(always,never,TOTAL,row.names = c('female','male','total'))
a
a[1,1]
a[1,2]
a[2,1]
(a[3,3]*(a[1,1]*a[2,2]-a[1,2]*a[2,1])^2)/(a[1,3]*a[2,3]*a[3,1]*a[3,2])
(a[3,3]*(a[1,1]*a[2,2]-a[1,2]*a[2,1])^2)/(a[1,3]*a[2,3]*a[3,1]*a[3,2])
(2239*(964*254-97*924)^2)/(1888*351*1061*1178)
(a[3,3]*(a[1,1]*a[2,2]-a[1,2]*a[2,1])^2)/(a[1,3]*a[2,3]*a[3,1]*a[3,2])
(2239*((964*254-97*924)^2))/(1888*351*1061*1178)
chi.square=(a[3,3]*(a[1,1]*a[2,2]-a[1,2]*a[2,1])^2)/(a[1,3]*a[2,3]*a[3,1]*a[3,2])
chi.square
df=(2-1)*(2-1);df
p.value=1-pchisq(chi.square,df=df)
p.value
groups=c("sliver","blue","green","total")
times=c(59,25,27,111)
a=data.frame(groups,times)
b=t(as.matrix(a))
groups=c("sliver","blue","green","total")
times=c(59,25,27,111)
a=data.frame(groups,times)
b=t(as.matrix(a))
b
groups=c("sliver","blue","green","total")
times=c(59,25,27,111)
percentage=c(59/111,25/111,27/111,111/111)
expected=c(1/3,1/3,1/3,1)
a=data.frame(groups,times,percentage,expected)
b=t(as.matrix(a))
b
groups=c("sliver","blue","green","total")
times=c(59,25,27,111)
percentage=c(59/111,25/111,27/111,111/111)
expected=c(1/3,1/3,1/3,1)
a=data.frame(groups,times,percentage,expected)
b=t(as.matrix(a))
b
c=b[3,];c
exp=b[4,];exp
chi=(a-exp)^2/exp;chi
c=b[3,];c
exp=b[4,];exp
c=b[3,1:3];c
exp=b[4,1:3];exp
chi=(c-exp)^2/exp;chi
groups=c("sliver","blue","green","total")
times=c(59,25,27,111)
percentage=c(59/111,25/111,27/111,111/111)
expected=c(1/3,1/3,1/3,1)
a=data.frame(groups,times,percentage,expected)
a
c=a[1:3,3];c
exp=a[1:3,4];exp
c=a[1:3,3];c
exp=a[1:3,4];exp
chi=(c-exp)^2/exp;chi
chi=sum(chi)
chi
c=a[1:3,3]
exp=a[1:3,4]
chi=(c-exp)^2/exp
chi=sum(chi)
chi
df=3-1;df
df=3-1;df
p.value=1-pchisq(chi.square,df=df)
p.value=1-pchisq(chi,df=df)
p.value
groups=c("sliver","blue","green","total")
times=c(59,25,27,111)
percentage=c(59/111,25/111,27/111,111/111)
expected=c((1/3)*111,(1/3)*111,(1/3)*111,1)
a=data.frame(groups,times,percentage,expected)
a
groups=c("sliver","blue","green","total")
times=c(59,25,27,111)
expected=c((1/3)*111,(1/3)*111,(1/3)*111,111)
a=data.frame(groups,times,expected)
a
c=a[1:3,3]
exp=a[1:3,4]
chi=(c-exp)^2/exp
chi=sum(chi)
chi
c=a[1:3,2]
exp=a[1:3,3]
chi=(c-exp)^2/exp
chi=sum(chi)
chi
c=a[1:3,2]
exp=a[1:3,3]
chi=((c-exp)^2)/exp
chi=sum(chi)
chi
c=a[1:3,2]
exp=a[1:3,3]
chi=((c-exp)^2)/exp;chi
chi=sum(chi)
chi
c=a[1:3,2]
exp=a[1:3,3]
chi=((c-exp)^2)/exp
chi=sum(chi)
chi
df=3-1;df
p.value=1-pchisq(chi,df=df)
p.value
pm2.5 = c(18.8, 14.6, 14.0, 15.8, 12.4, 13.2, 16.1, 13.8, 16.2,
16.1, 17.8, 18.7, 15.8, 13.3, 13.6, 16.4, 13.8, 16.6,
15.3, 19.0, 18.4, 15.0, 18.8, 18.1, 17.3, 16.3, 17.5,
18.1, 14.2, 18.0, 13.0, 13.3, 12.4, 16.6, 14.1, 20.6,
16.8, 13.3, 18.2, 16.9)
#defining thresholds to categorize continuous data
mean = mean(pm2.5)
sd = sd(pm2.5)
n = length(pm2.5)
thres = c(mean-3*sd, mean-2*sd, mean-sd, mean, mean+sd, mean+2*sd, mean+3*sd)
#observed values (continuous --> discrete)
obs = rep(0, length = 8)
for (i in 1:length(pm2.5)) {
if (pm2.5[i] < thres[1]) {
obs[1]=obs[1]+1
} else if (thres[1]<pm2.5[i] & pm2.5[i] <thres[2]) {
obs[2]=obs[2]+1
} else if (thres[2]<pm2.5[i] & pm2.5[i]<thres[3]) {
obs[3]=obs[3]+1
}else if (thres[3]<pm2.5[i] & pm2.5[i]<thres[4]) {
obs[4]=obs[4]+1
}else if (thres[4]<pm2.5[i] & pm2.5[i]<thres[5]) {
obs[5]=obs[5]+1
}else if (thres[5]<pm2.5[i] & pm2.5[i]<thres[6]) {
obs[6]=obs[6]+1
}else if (thres[6]<pm2.5[i] & pm2.5[i]<thres[7]) {
obs[7]=obs[7]+1
}else {
obs[8]=obs[8]+1
}
}
#expected value
cumu.p = c(pnorm(thres[1],mean=mean,sd=sd),
pnorm(thres[2],mean=mean,sd=sd) - pnorm(thres[1],mean=mean,sd=sd),
pnorm(thres[3],mean=mean,sd=sd) - pnorm(thres[2],mean=mean,sd=sd),
pnorm(thres[4],mean=mean,sd=sd) - pnorm(thres[3],mean=mean,sd=sd),
pnorm(thres[5],mean=mean,sd=sd) - pnorm(thres[4],mean=mean,sd=sd),
pnorm(thres[6],mean=mean,sd=sd) - pnorm(thres[5],mean=mean,sd=sd),
pnorm(thres[7],mean=mean,sd=sd) - pnorm(thres[6],mean=mean,sd=sd),
1-pnorm(thres[7],mean=mean,sd=sd))
exp = cumu.p * n
#creat table
tbl = data.frame(obs, exp)
#check conditions
tbl
#combining 6,7,8 rows
tbl.678 = tbl[6,] +tbl[7,] + tbl[8,] #add up 7,8 rows
tbl = tbl[-c(6,7,8),] #remove 7,8 rows
#combining 1,2,3 rows
tbl.123 = tbl[1,] + tbl[2,] + tbl[3,] #add up 1,2,3 rows
tbl = tbl[-c(1,2,3),] #remove 6,7,8 rows
tbl = rbind(tbl.123,tbl, tbl.678) #add the combined row
#add table name
cate = c("< m-d", "m-d ~ m", "m ~ m+d", ">m+d ~ m+2d")
rownames(tbl) = cate
tbl
#calculate the chi-square statistic
chi=(tbl$obs -tbl$exp)^2/tbl$exp
x_square=sum(chi)
x_square
df = nrow(tbl)-1-2  # k-1-r
df
p.value=1-pchisq(x_square,df=df)
p.value
n=100
alpha=0.05
t=qt(alpha/2,df=n-2,lower.tail = F)
yhat-t*0.7
n=100
alpha=0.05
yhat=7
t=qt(alpha/2,df=n-2,lower.tail = F)
yhat-t*0.7
yhat+t*0.7
plot(Vehicle~GDP,pch=16,cex=1,col="navy",
main="Vehicle vs GDP",xlab="GDP(1 billion)",ylab="Vehicle",cex.main=2,cex.lab=1.2)
right_p=c(87/129,64/83,151/212)
over_p=c(39/129,3/83,42/212)
under_p=c(3/129,16/83,19/212)
total_p=c(1,1,1)
p=data.frame(about_right=right_p,overweight=over_p,underweight=under_p,total=total_p,row.names = c("female","male","total"))
p
pp=t(as.matrix(p))
pp=pp[1:3,1:2]
barplot(pp,col=c("red","blue","green"),main="comparison of gender",xlab = "gender",ylab="percentage",legend=rownames(pp),beside = T)
c=a+b
survive=c(500,95,595)
die=c(500,5,505)
TOTAL=c(1000,100,1100)
b=data.frame(survive,die,TOTAL,row.names = c('standard','new','total'))
b
survive=c(5,100,105)
die=c(95,900,995)
TOTAL=c(100,1000,1100)
a=data.frame(survive,die,TOTAL,row.names = c('standard','new','total'))
a
c=a+b
c
c[1,1]/c[1,3]
c[2,1]/c[2,3]
separated=c(41,41,32,114)
not=c(931,290,163,1384)
TOTAL=c(972,331,195,1498)
a=data.frame(separated,not,TOTAL,row.names = c('neither smoked','one smoked','both smoked','total'))
a
a[1,3]
a[4,3]
a[2,3]
a[3,3]
a[4,2]
View(a)
a[4,2]
exp_separated=c(a[1,3]*a[4,1]/a[4,3],a[2,3]*a[4,1]/a[4,3],a[3,3]*a[4,1]/a[4,3])
exp_not=c(a[1,3]*a[4,2]/a[4,3],a[2,3]*a[4,2]/a[4,3],a[3,3]*a[4,2]/a[4,3])
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp
a=a[1:3,1:2];a
chi=((a-exp)^2)/exp;chi
chi=sum(chi)
chi
sum(chi)
a[4,2]
exp_separated=c(a[1,3]*a[4,1]/a[4,3],a[2,3]*a[4,1]/a[4,3],a[3,3]*a[4,1]/a[4,3])
exp_not=c(a[1,3]*a[4,2]/a[4,3],a[2,3]*a[4,2]/a[4,3],a[3,3]*a[4,2]/a[4,3])
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
a[4,2]
exp_separated=c(a[1,3]*a[4,1]/a[4,3],a[2,3]*a[4,1]/a[4,3],a[3,3]*a[4,1]/a[4,3])
exp_not=c(a[1,3]*a[4,2]/a[4,3],a[2,3]*a[4,2]/a[4,3],a[3,3]*a[4,2]/a[4,3])
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp_separated=c(a[1,3]*a[4,1]/a[4,3],a[2,3]*a[4,1]/a[4,3],a[3,3]*a[4,1]/a[4,3])
exp_not=c(a[1,3]*a[4,2]/a[4,3],a[2,3]*a[4,2]/a[4,3],a[3,3]*a[4,2]/a[4,3])
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp_separated=c((a[1,3]*a[4,1]/a[4,3]),(a[2,3]*a[4,1]/a[4,3]),(a[3,3]*a[4,1]/a[4,3]))
exp_not=c((a[1,3]*a[4,2]/a[4,3]),(a[2,3]*a[4,2]/a[4,3]),(a[3,3]*a[4,2]/a[4,3]))
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one","both"))
exp_separated=c((a[1,3]*a[4,1]/a[4,3]),(a[2,3]*a[4,1]/a[4,3]),(a[3,3]*a[4,1]/a[4,3]))
exp_not=c((a[1,3]*a[4,2]/a[4,3]),(a[2,3]*a[4,2]/a[4,3]),(a[3,3]*a[4,2]/a[4,3]))
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one", "both"))
exp_separated=c((a[1,3]*a[4,1]/a[4,3]),(a[2,3]*a[4,1]/a[4,3]),(a[3,3]*a[4,1]/a[4,3]))
exp_not=c((a[1,3]*a[4,2]/a[4,3]),(a[2,3]*a[4,2]/a[4,3]),(a[3,3]*a[4,2]/a[4,3]))
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one"))
exp_not=c((a[1,3]*a[4,2]/a[4,3]),(a[2,3]*a[4,2]/a[4,3]),(a[3,3]*a[4,2]/a[4,3]))
exp_not
a[1,3]*a[4,2]/a[4,3]
a[4,3]
separated=c(41,41,32,114)
not=c(931,290,163,1384)
TOTAL=c(972,331,195,1498)
a=data.frame(separated,not,TOTAL,row.names = c('neither smoked','one smoked','both smoked','total'))
a
a[4,3]
exp_separated=c((a[1,3]*a[4,1]/a[4,3]),(a[2,3]*a[4,1]/a[4,3]),(a[3,3]*a[4,1]/a[4,3]))
exp_not=c((a[1,3]*a[4,2]/a[4,3]),(a[2,3]*a[4,2]/a[4,3]),(a[3,3]*a[4,2]/a[4,3]))
exp=data.frame(exp_separated,exp_not,row.names = c("neither","one", "both" ))
exp
a=a[1:3,1:2];a
chi=(a-exp)^2/exp;chi
chi=sum(chi)
chi
nrow=3
ncol=2
df=(nrow-1)*(ncol-1)
p.value=1-pchisq(chi,df=df)
p.value
rm(list = ls())
Heart_Table = read.table("heartatk.csv", header=TRUE, sep=",")
# Generate a two-way table
MyTable = xtabs(~ SEX + DIED, data = Heart_Table) # generate a 2x2 table
MyTable
# total number of observations:
sum(MyTable)
MyTable
## risk
risk.F = MyTable[1,2] / sum(MyTable[1,]); risk.F
risk.M = MyTable[2,2] / sum(MyTable[2,]); risk.M
## relative risk
relarisk.M_F = risk.M / risk.F; relarisk.M_F  #base: Female
## percent increase in risk
incrisk.M_F = (relarisk.M_F-1); incrisk.M_F
incrisk.M_F = (risk.M-risk.F) / risk.F; incrisk.M_F
## odds
odds.F = MyTable[1,2] / MyTable[1,1]; odds.F
odds.M = MyTable[2,2] / MyTable[2,1]; odds.M
## odds ratio
oddsratio.M_F = odds.M / odds.F; oddsratio.M_F  #base: Female
oddsratio.F_M = odds.F / odds.M; oddsratio.F_M  #base: Male
# 1(2) By functions:
#install.packages("epitools")
library(epitools)
epitab(MyTable, method = "riskratio")  #relative risk
relarisk.M_F = risk.M / risk.F; relarisk.M_F  #base: Female
epitab(MyTable, method = "oddsratio")  #odds ratio
oddsratio.M_F = odds.M / odds.F; oddsratio.M_F  #base: Female
epitab(MyTable, method = "oddsratio", rev = "row")  #change the base to M
oddsratio.F_M = odds.F / odds.M; oddsratio.F_M  #base: Male
# row total, column total, total
total.0 = sum(MyTable[,1]); total.0
total.1 = sum(MyTable[,2]); total.1
total.F = sum(MyTable[1,]); total.F
total.M = sum(MyTable[2,]); total.M
total = sum(MyTable)
# generate an expected table
ExpTable = MyTable
ExpTable[1,1] = total.0*total.F / total
ExpTable[1,2] = total.1*total.F / total
ExpTable[2,1] = total.0*total.M / total
ExpTable[2,2] = total.1*total.M / total
ExpTable
# calculate chi-square statistic
chi.11 = ((MyTable[1,1] - ExpTable[1,1])^2) / ExpTable[1,1]
chi.12 = ((MyTable[1,2] - ExpTable[1,2])^2) / ExpTable[1,2]
chi.21 = ((MyTable[2,1] - ExpTable[2,1])^2) / ExpTable[2,1]
chi.22 = ((MyTable[2,2] - ExpTable[2,2])^2) / ExpTable[2,2]
chi.square = sum(chi.11, chi.12, chi.21, chi.22); chi.square
# p-value
df = (nrow(MyTable)-1) * (ncol(MyTable)-1); df
p.value = 1-pchisq(chi.square, df = df)
p.value
# 2(2) By functions:
RESULTS = chisq.test(MyTable, correct = F)
RESULTS
MyTable
##z test
prop.test(x = c(767,643), n = c(5065,7779), alternative = "two.sided", correct = F)
oneway = aov(q ~ factor(r), data = wineratings)
load("wineratings.rdata")
